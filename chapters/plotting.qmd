# Plotting

In this section we will show how to explore qPCR data through plotting. 
Whenever doing data analysis, it is very important to explore data
through data summaries and plots. This way you learn and get a better
feeling for the generated data. 

If you have been following the previous chapters, the data will
be ready to do the plotting and data exploration. Here
we will introduce the library `ggplot2` and we will combine
with the pivoting functions we previously learned.

```{r, message=FALSE}
library(dplyr)

library(ggplot2)
```

```{r}
qpcr <- readRDS("../checkpoints/cleaning/qpcr.rds")
summarised_qpcr <- readRDS("../checkpoints/preparing/summarised_qpcr.rds")
```

## Visualizing cycle thresholds

The first step is to understand the cycle thresholds obtained in the 
data, even before normalizing them. This is important as we might
find outliers and we check how good the housekeeping genes are.

Moreover, one important step of the analysis is to check the absolute 
values of the cycle thresholds. Sometimes the fold changes
can be misleading if there are high values of cycle thresholds.

Since qPCR data usually is already in the long 
format^[Check the appendix for more details.], we can
directly apply the whole `ggplot2` machinery.

The idea with `ggplot2` is that one can add layers on your plot.
You start with an empty canvas by calling the function
`ggplot` and you specify its aesthetics within the function 
`aes`. Here we want to plot the cycle threshold by sample id, color
by treatment and the shape will be the genotype. 

```{r}
p <- ggplot2::ggplot(
    summarised_qpcr, 
    aes(x = gene, y = mean, color = genotype, shape = treatment)
)
```

To get the points for each group in a way they don't overlap with each other,
we use the function `geom_jitter` from `ggplot2`. This function is useful
when one of the axis is categorical, which in this case is the gene.

```{r}
p + 
    geom_jitter() +
    theme_bw()
```

We can also modify the theme of the plot by using one of the functions
`theme_*`. Here we use the `theme_bw`, all the basic options are
here: 
[https://ggplot2.tidyverse.org/reference/ggtheme.html](https://ggplot2.tidyverse.org/reference/ggtheme.html).

Already from the average cycle threshold plot for each gene we can
draw some conclusions. First we see that the loading worked very well
for all samples, as the average CT is almost the same for all samples.
Also from here we can see a difference in treatments among the
WT samples from the AKT gene. Lastly, the control AKT gene from
the KO genotype is highly variable.

## Are there any outliers? 

A common mistake is to use the data as it is. The exploratory analysis
is very important as it can uncover outliers. One way to check the presence
of weird samples is to plot the average CT values versus their standard
deviation. The function `geom_point` gives a scatterplot. On the other hand,
the function `labs` modifies the name of the axis, title and other things. 
Here we only change the x and y axis, but to change the title simply
modify the argument `title` within the `labs` function.

```{r}
ggplot(
    summarised_qpcr, 
    aes(x = mean, y = sd, color = genotype, shape = treatment)
) + 
    geom_point() +
    labs(
        x = "Average CT values",
        y = "SD of CT values"
    ) +
    theme_bw()
```

It seems that there is no outlier in this case. We can now proceed to the
next chapter, in which we normalize the data.
