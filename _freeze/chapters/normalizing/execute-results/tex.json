{
  "hash": "0491a5d592c3f5fc82030bd3c315bc72",
  "result": {
    "markdown": "# Normalizing the data\n\nOne crucial step is the delta CT normalization, in which we use\nthe housekeeping genes to correct for the loading in the qPCR. In this\nsmall chapter we normalize the data and save it so it can be used\nduring the modelling. \n\nBefore normalizing we would like to remove\nthe technical samples that look like outliers. This is important because\nif there is a value that looks plainly wrong, it will affect the results. \n\nAnd the last step before moving on to the next step is to once again\nplot the data. Even though we already explored the data once\nin the last chapter, plotting is never enough, it helps us understand\nwhat is going on with the experiments.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(tidyr)\n\nlibrary(ggplot2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nqpcr <- readRDS(\"../checkpoints/cleaning/qpcr.rds\")\nsummarised_qpcr <- readRDS(\"../checkpoints/preparing/summarised_qpcr.rds\")\n```\n:::\n\n\n## delta CT\n\nThe classical normalization method is the delta CT. We subtract the\ngeometric average of the housekeeping genes from each average CT value\nof the genes of interest. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# specify the genes of interest and housekeeping genes, any \n# number of genes can be used here. They are used in the code below\n# during the normalization procedure\ngenes_of_interest <- c(\"AKT\")\nhk_genes <- c(\"GAPDH\")\n\nnormalized_qpcr <- summarised_qpcr %>%\n    group_by() %>%\n    pivot_wider(\n        id_cols = c(\"sample_id\", \"group\", \"genotype\", \"treatment\"),\n        values_from = \"mean\",\n        names_from = \"gene\"\n    ) %>% \n    # apply the operation in each row individually\n    rowwise() %>% \n    mutate(hk_geom = exp(mean(log(!!sym(hk_genes))))) %>%\n    # now we convert back to the long format but only for the \n    # genes of interest, so we can apply for each row the difference\n    pivot_longer(\n        cols = all_of(genes_of_interest),\n        names_to = \"gene\",\n        values_to = \"mean\"\n    ) %>%\n    mutate(dct = mean - hk_geom)\n    \nnormalized_qpcr %>% head\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 x 9\n  sample_id group genotype treatment GAPDH hk_geom gene   mean    dct\n  <fct>     <chr> <chr>    <chr>     <dbl>   <dbl> <chr> <dbl>  <dbl>\n1 20        WT C  WT       C          17.3    17.3 AKT    16.5 -0.740\n2 21        WT C  WT       C          17.2    17.2 AKT    16.6 -0.567\n3 22        WT C  WT       C          17.3    17.3 AKT    17.0 -0.323\n4 23        WT T  WT       T          17.3    17.3 AKT    17.7  0.440\n5 24        WT T  WT       T          17.2    17.3 AKT    17.8  0.537\n6 25        WT T  WT       T          17.2    17.2 AKT    17.9  0.717\n```\n:::\n:::\n\n\nNotice here how important it is `pivot_longer` and `pivot_wider`. They\nallow us to perform several operations on our dataset.\n\n## Exploring normalized data\n\nWith the normalized dataset we can now investigate and compare the groups.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnormalized_qpcr %>% \n    # convert the C and T to control and treated\n    mutate(treatment = ifelse(treatment == \"C\", \"Control\", \"Treated\")) %>%\n    ggplot(aes(y = dct, x = treatment, color = genotype, shape = gene)) + \n    geom_jitter() + \n    labs(x = \"Treatment\", y = expression(Delta*\"CT\")) +\n    theme_bw()\n```\n\n::: {.cell-output-display}\n![](normalizing_files/figure-pdf/unnamed-chunk-4-1.pdf){fig-pos='H'}\n:::\n:::\n\n\nAlready from this plot we see that in the control condition, the KO genotype\nis highly variable, so it is very unlikely we see any differences, in average\nbetween control and the treated condition. But that does not mean anything,\nit could be that your question is if the treatment stabilizes the KO condition\nof the gene.\n\nAnd lastly we compare the CT values with the $\\Delta$CT values. It is \nanother way to see how well the housekeeping genes are performing.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnormalized_qpcr %>% \n    ggplot(aes(x = mean, y = dct, color = group)) +\n    geom_smooth(\n        method = \"lm\",\n        color = \"black\", \n        alpha = 0.5, \n        size = .1,\n        formula = \"y~x\"\n    ) +\n    geom_point() +\n    theme_bw()\n```\n\n::: {.cell-output-display}\n![](normalizing_files/figure-pdf/unnamed-chunk-5-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n## Checkpoint\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(normalized_qpcr, \"../checkpoints/normalizing/normalized_qpcr.rds\")\n```\n:::",
    "supporting": [
      "normalizing_files/figure-pdf"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}